# PIPELINE DEFINITION
# Name: document-to-podcast
# Description: Convert a document to a podcast.
#              This pipeline downloads a document, processes it, converts it to a script,
#              and finally converts the script to speech (podcast).
# Inputs:
#    audio_format: str
#    cohost_name: str
#    cohost_voice_profile: str
#    document_url: str
#    file_type: str
#    host_name: str
#    host_voice_profile: str
#    text_to_speech_model: str
#    text_to_text_model: str
components:
  comp-downloader:
    executorLabel: exec-downloader
    inputDefinitions:
      parameters:
        document_url:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        downloaded_file_path:
          artifactType:
            schemaTitle: system.HTML
            schemaVersion: 0.0.1
  comp-performer:
    executorLabel: exec-performer
    inputDefinitions:
      artifacts:
        podcast_script:
          artifactType:
            schemaTitle: system.Markdown
            schemaVersion: 0.0.1
      parameters:
        audio_format:
          defaultValue: WAV
          isOptional: true
          parameterType: STRING
        cohost_voice_profile:
          defaultValue: am_michael
          isOptional: true
          parameterType: STRING
        host_voice_profile:
          defaultValue: af_sarah
          isOptional: true
          parameterType: STRING
        model:
          defaultValue: hexgrad/Kokoro-82M
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      artifacts:
        podcast:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-scriptwriter:
    executorLabel: exec-scriptwriter
    inputDefinitions:
      artifacts:
        processed_document:
          artifactType:
            schemaTitle: system.Markdown
            schemaVersion: 0.0.1
      parameters:
        cohost_name:
          defaultValue: Michael
          isOptional: true
          parameterType: STRING
        host_name:
          defaultValue: Sarah
          isOptional: true
          parameterType: STRING
        model:
          defaultValue: bartowski/Qwen2.5-7B-Instruct-GGUF/Qwen2.5-7B-Instruct-Q8_0.gguf
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      artifacts:
        podcast_script:
          artifactType:
            schemaTitle: system.Markdown
            schemaVersion: 0.0.1
  comp-transformer:
    executorLabel: exec-transformer
    inputDefinitions:
      artifacts:
        file_path:
          artifactType:
            schemaTitle: system.HTML
            schemaVersion: 0.0.1
      parameters:
        file_type:
          defaultValue: .html
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      artifacts:
        processed_document:
          artifactType:
            schemaTitle: system.Markdown
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-downloader:
      container:
        args:
        - downloader.py
        - --url
        - '{{$.inputs.parameters[''document_url'']}}'
        - --output
        - '{{$.outputs.artifacts[''downloaded_file_path''].path}}'
        - --overwrite
        command:
        - python
        image: mzdotai/workflow-components-downloader:latest
    exec-performer:
      container:
        args:
        - performer.py
        - --input
        - '{{$.inputs.artifacts[''podcast_script''].path}}'
        - --voice-profiles
        - '{{$.inputs.parameters[''host_voice_profile'']}}'
        - '{{$.inputs.parameters[''cohost_voice_profile'']}}'
        - --model
        - '{{$.inputs.parameters[''model'']}}'
        - --output
        - '{{$.outputs.artifacts[''podcast''].path}}'
        - --file-type
        - '{{$.inputs.parameters[''audio_format'']}}'
        command:
        - python
        image: mzdotai/workflow-components-performer:latest
        resources:
          accelerator:
            count: '1'
            resourceCount: '1'
            resourceType: nvidia.com/gpu
            type: nvidia.com/gpu
    exec-scriptwriter:
      container:
        args:
        - scriptwriter.py
        - --input
        - '{{$.inputs.artifacts[''processed_document''].path}}'
        - --hosts
        - '{{$.inputs.parameters[''host_name'']}}'
        - '{{$.inputs.parameters[''cohost_name'']}}'
        - --model
        - '{{$.inputs.parameters[''model'']}}'
        - --output
        - '{{$.outputs.artifacts[''podcast_script''].path}}'
        command:
        - python
        image: mzdotai/workflow-components-scriptwriter:latest
        resources:
          accelerator:
            count: '1'
            resourceCount: '1'
            resourceType: nvidia.com/gpu
            type: nvidia.com/gpu
    exec-transformer:
      container:
        args:
        - transformer.py
        - --input
        - '{{$.inputs.artifacts[''file_path''].path}}'
        - --file-type
        - '{{$.inputs.parameters[''file_type'']}}'
        - --output
        - '{{$.outputs.artifacts[''processed_document''].path}}'
        command:
        - python
        image: mzdotai/workflow-components-transformer:latest
pipelineInfo:
  description: 'Convert a document to a podcast.

    This pipeline downloads a document, processes it, converts it to a script,

    and finally converts the script to speech (podcast).'
  name: document-to-podcast
root:
  dag:
    tasks:
      downloader:
        cachingOptions: {}
        componentRef:
          name: comp-downloader
        inputs:
          parameters:
            document_url:
              componentInputParameter: document_url
        taskInfo:
          name: downloader
      performer:
        cachingOptions: {}
        componentRef:
          name: comp-performer
        dependentTasks:
        - scriptwriter
        inputs:
          artifacts:
            podcast_script:
              taskOutputArtifact:
                outputArtifactKey: podcast_script
                producerTask: scriptwriter
          parameters:
            audio_format:
              componentInputParameter: audio_format
            cohost_voice_profile:
              componentInputParameter: cohost_voice_profile
            host_voice_profile:
              componentInputParameter: host_voice_profile
            model:
              componentInputParameter: text_to_speech_model
        taskInfo:
          name: performer
      scriptwriter:
        cachingOptions: {}
        componentRef:
          name: comp-scriptwriter
        dependentTasks:
        - transformer
        inputs:
          artifacts:
            processed_document:
              taskOutputArtifact:
                outputArtifactKey: processed_document
                producerTask: transformer
          parameters:
            cohost_name:
              componentInputParameter: cohost_name
            host_name:
              componentInputParameter: host_name
            model:
              componentInputParameter: text_to_text_model
        taskInfo:
          name: scriptwriter
      transformer:
        cachingOptions: {}
        componentRef:
          name: comp-transformer
        dependentTasks:
        - downloader
        inputs:
          artifacts:
            file_path:
              taskOutputArtifact:
                outputArtifactKey: downloaded_file_path
                producerTask: downloader
          parameters:
            file_type:
              componentInputParameter: file_type
        taskInfo:
          name: transformer
  inputDefinitions:
    parameters:
      audio_format:
        isOptional: true
        parameterType: STRING
      cohost_name:
        isOptional: true
        parameterType: STRING
      cohost_voice_profile:
        isOptional: true
        parameterType: STRING
      document_url:
        parameterType: STRING
      file_type:
        isOptional: true
        parameterType: STRING
      host_name:
        isOptional: true
        parameterType: STRING
      host_voice_profile:
        isOptional: true
        parameterType: STRING
      text_to_speech_model:
        isOptional: true
        parameterType: STRING
      text_to_text_model:
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.13.0
