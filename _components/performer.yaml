name: performer
description: Convert a text document to speech using the specified voice profiles.

inputs:
- {name: podcast_script, type: Markdown, description: The path to the input document.}
- {name: host_voice_profile, type: String, default: af_sarah, description: The voice profile for the host.}
- {name: cohost_voice_profile, type: String, default: am_michael, description: The voice profile for the co-host.}
- {name: audio_format, type: String, default: WAV, description: The file format for the output audio.}
- {name: model, type: String, default: hexgrad/Kokoro-82M, description: The default model to use for text-to-speech.}

outputs:
- {name: podcast, type: Artifact, description: The path to save the converted speech.}

metadata:
  annotations:
    tags: text-to-speech, audio, podcast, two-speakers
    inputs: |   
      host_voice_profile: |
        Must be different from 'cohost_voice_profile' value.
        When using the default value for 'model', may only have recommended values from https://huggingface.co/hexgrad/Kokoro-82M/blob/main/VOICES.md.
      cohost_voice_profile: | 
        Must be different from 'host_voice_profile' value.
        When using the default value for 'model', may only have recommended values from https://huggingface.co/hexgrad/Kokoro-82M/blob/main/VOICES.md.
      model: |
        The the default model is not used the 'host_voice_profile' and 'cohost_voice_profile' values must be compatible with the selected model.

implementation:
  container:
    image: mzdotai/workflow-components-performer:latest
    command: [python]
    args: [
      performer.py,
      --input,  {inputPath: podcast_script},
      --voice-profiles,  {inputValue: host_voice_profile}, {inputValue: cohost_voice_profile},
      --model, {inputValue: model},
      --output, {outputPath: podcast},
      --file-type, {inputValue: audio_format},
    ]
